{"version":3,"sources":["../../lib/site.post.js"],"names":[],"mappings":"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","file":"site.post.js","sourcesContent":["/**\n * Module dependencies.\n */\nimport Like from './site.post.like';\nimport Reblog from './site.post.reblog';\nimport Comment from './site.comment';\nimport Subscriber from './site.post.subscriber';\nimport runtimeBuilder from './util/runtime-builder';\nimport sitePostGetMethods from './runtime/site.post.get';\nimport debugFactory from 'debug';\n\n/**\n * Module vars\n */\nconst debug = debugFactory( 'wpcom:post' );\nconst root = '/sites';\n\n/**\n * SitePost class\n */\nclass SitePost {\n\t/**\n\t * SitePost methods\n\t *\n\t * @param {String} id - post id\n\t * @param {String} sid site id\n\t * @param {WPCOM} wpcom - wpcom instance\n\t * @return {Null} null\n\t */\n\tconstructor( id, sid, wpcom ) {\n\t\tif ( ! ( this instanceof SitePost ) ) {\n\t\t\treturn new SitePost( id, sid, wpcom );\n\t\t}\n\n\t\tthis.wpcom = wpcom;\n\t\tthis._sid = sid;\n\t\tthis.path = `${root}/${this._sid}/posts`;\n\n\t\t// set `id` and/or `slug` properties\n\t\tid = id || {}\n\t\tif ( 'object' !== typeof id ) {\n\t\t\tthis._id = id;\n\t\t} else {\n\t\t\tthis._id = id.id;\n\t\t\tthis._slug = id.slug;\n\t\t}\n\t}\n\n\t/**\n\t * Set post `id`\n\t *\n\t * @param {String} id - site id\n\t */\n\tid( id ) {\n\t\tthis._id = id;\n\t}\n\n\t/**\n\t * Set post `slug`\n\t *\n\t * @param {String} slug - site slug\n\t */\n\tslug( slug ) {\n\t\tthis._slug = slug;\n\t}\n\n\t/**\n\t * Get post url path\n\t *\n\t * @return {String} post path\n\t */\n\n\tgetPostPath() {\n\t\treturn `${this.path}/${this._id}`;\n\t}\n\n\t/**\n\t * Get post\n\t *\n\t * @param {Object} [query] - query object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\tget( query, fn ) {\n\t\tif ( ! this._id && this._slug ) {\n\t\t\treturn this.getBySlug( query, fn );\n\t\t}\n\n\t\treturn this.wpcom.req.get( this.getPostPath(), query, fn );\n\t}\n\n\t/**\n\t * Get post by slug\n\t *\n\t * @param {Object} [query] - query object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\tgetBySlug( query, fn ) {\n\t\treturn this.wpcom.req.get( `${this.path}/slug:${this._slug}`, query, fn );\n\t}\n\n\t/**\n\t * Add post\n\t *\n\t * @param {Object} [query] - query object parameter\n\t * @param {Object} body - body object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\tadd( query, body, fn ) {\n\t\tif ( undefined === fn ) {\n\t\t\tif ( undefined === body ) {\n\t\t\t\tbody = query;\n\t\t\t\tquery = {}\n\t\t\t} else if ( 'function' === typeof body ) {\n\t\t\t\tfn = body;\n\t\t\t\tbody = query;\n\t\t\t\tquery = {}\n\t\t\t}\n\t\t}\n\n\t\treturn this.wpcom.req.post( `${this.path}/new`, query, body )\n\t\t\t.then( data => {\n\t\t\t\t// update POST object\n\t\t\t\tthis._id = data.ID;\n\t\t\t\tdebug( 'Set post _id: %s', this._id );\n\n\t\t\t\tthis._slug = data.slug;\n\t\t\t\tdebug( 'Set post _slug: %s', this._slug );\n\n\t\t\t\tif ( 'function' === typeof fn ) {\n\t\t\t\t\tfn( null, data );\n\t\t\t\t} else {\n\t\t\t\t\treturn Promise.resolve( data );\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.catch( err => {\n\t\t\t\tif ( 'function' === typeof fn ) {\n\t\t\t\t\tfn( err );\n\t\t\t\t} else {\n\t\t\t\t\treturn Promise.reject( err );\n\t\t\t\t}\n\t\t\t} );\n\t}\n\n\t/**\n\t * Edit post\n\t *\n\t * @param {Object} [query] - query object parameter\n\t * @param {Object} body - body object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\tupdate( query, body, fn ) {\n\t\treturn this.wpcom.req.put( this.getPostPath(), query, body, fn );\n\t}\n\n\t/**\n\t * Delete post\n\t *\n\t * @param {Object} [query] - query object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Promise} Promise\n\t */\n\tdelete( query, fn ) {\n\t\tconst path = `${this.getPostPath()}/delete`;\n\t\treturn this.wpcom.req.del( path, query, fn );\n\t}\n\n\t/**\n\t * Del post, alias of Delete\n\t *\n\t * @param {Object} [query] - query object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Promise} Promise\n\t */\n\tdel( query, fn ) {\n\t\treturn this.delete( query, fn );\n\t}\n\n\t/**\n\t * Restore post\n\t *\n\t * @param {Object} [query] - query object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\trestore( query, fn ) {\n\t\treturn this.wpcom.req.put( `${this.getPostPath()}/restore`, query, null, fn );\n\t}\n\n\t/**\n\t * Search within a site for related posts\n\t *\n\t * @param {Object} body - body object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\trelated( body, fn ) {\n\t\treturn this.wpcom.req.put( `${this.getPostPath()}/related`, body, null, fn );\n\t}\n\n\t/**\n\t * Create a `Comment` instance\n\t *\n\t * @param {String} [cid] - comment id\n\t * @return {Comment} Comment instance\n\t */\n\tcomment( cid ) {\n\t\treturn new Comment( cid, this._id, this._sid, this.wpcom );\n\t}\n\n\t/**\n\t * Return recent comments\n\t *\n\t * @param {Object} [query] - query object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\tcomments( query, fn ) {\n\t\tvar comment = new Comment( null, this._id, this._sid, this.wpcom );\n\t\treturn comment.replies( query, fn );\n\t}\n\n\t/**\n\t * Create a `Like` instance\n\t *\n\t * @return {Like} Like instance\n\t */\n\tlike() {\n\t\treturn new Like( this._id, this._sid, this.wpcom );\n\t}\n\n\t/**\n\t * Create a `Reblog` instance\n\t *\n\t * @return {Reblog} Reblog instance\n\t */\n\treblog() {\n\t\treturn new Reblog( this._id, this._sid, this.wpcom );\n\t}\n\n\t/**\n\t * Return a `Subscriber` instance.\n\t *\n\t * *Example:*\n\t *    // Create a Subscriber instance of a post\n\t *    var post = wpcom.site( 'en.blog.wordpress.com' ).post( 1234 );\n\t *    var subs = post.subscriber();\n\t *\n\t * @return {Subscriber} Subscriber instance\n\t */\n\tsubscriber() {\n\t\treturn new Subscriber( this._id, this._sid, this.wpcom );\n\t};\n}\n\n// add methods in runtime\nruntimeBuilder( SitePost, sitePostGetMethods, ( item, ctx ) => {\n\treturn `/sites/${ctx._sid}/posts/${ctx._id}/${item.subpath}`;\n} );\n\nexport default SitePost;\n"]}