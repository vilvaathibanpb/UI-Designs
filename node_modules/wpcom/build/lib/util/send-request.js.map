{"version":3,"sources":["../../../lib/util/send-request.js"],"names":[],"mappings":";;;;;;;;;;kBAkBwB,W;;AAfxB;;;;AACA;;;;;;AAJA;;;AAMA,IAAM,QAAQ,qBAAc,oBAAd,CAAd;AACA,IAAM,YAAY,qBAAc,wBAAd,CAAlB;;AAEA;;;;;;;;;AASe,SAAS,WAAT,CAAsB,MAAtB,EAA8B,KAA9B,EAAqC,IAArC,EAA2C,EAA3C,EAAgD;AAAA;;AAC9D;AACA,UAAS,aAAa,OAAO,MAApB,GAA6B,EAAE,MAAM,MAAR,EAA7B,GAAgD,MAAzD;;AAEA,OAAO,kBAAP,EAA2B,OAAO,IAAlC;;AAEA;AACA,QAAO,MAAP,GAAgB,CAAE,OAAO,MAAP,IAAiB,KAAnB,EAA2B,WAA3B,EAAhB;;AAEA;AACA,KAAK,eAAe,OAAO,KAA3B,EAAmC;AAClC,OAAK,KAAL;AACA,UAAQ,EAAR;AACA;;AAED;AACA,KAAK,eAAe,OAAO,IAA3B,EAAkC;AACjC,OAAK,IAAL;AACA,SAAO,IAAP;AACA;;AAED;AACA,SAAQ,SAAS,EAAjB;;AAEA;AACA;AACA,KAAK,MAAM,UAAX,EAAwB;AACvB,SAAO,UAAP,GAAoB,MAAM,UAA1B;AACA,QAAO,gBAAP,EAAyB,OAAO,UAAhC;AACA,SAAO,MAAM,UAAb;AACA,EAJD,MAIO;AACN,SAAO,UAAP,GAAoB,KAAK,UAAzB;AACA;;AAED;AACA,KAAK,MAAM,YAAX,EAA0B;AACzB,SAAO,YAAP,GAAsB,MAAM,YAA5B;AACA,QAAO,kBAAP,EAA2B,OAAO,YAAlC;AACA,SAAO,MAAM,YAAb;AACA;;AAED;AACA,KAAK,MAAM,WAAX,EAAyB;AACxB,SAAO,WAAP,GAAqB,MAAM,WAA3B;AACA,QAAO,iBAAP,EAA0B,OAAO,WAAjC;AACA,SAAO,MAAM,WAAb;AACA;;AAED;AACA,SAAQ,aAAG,SAAH,CAAc,KAAd,EAAqB,EAAE,aAAa,UAAf,EAArB,CAAR;;AAEA;AACA,QAAO,KAAP,GAAe,KAAf;;AAEA,KAAK,IAAL,EAAY;AACX,SAAO,IAAP,GAAc,IAAd;AACA;AACD,OAAO,YAAP,EAAqB,MAArB;;AAEA;AACA,KAAK,eAAe,OAAO,EAA3B,EAAgC;AAC/B;AACA,SAAO,KAAK,OAAL,CAAc,MAAd,EAAsB,UAAU,GAAV,EAAe,GAAf,EAAoB,OAApB,EAA8B;AAC1D,aAAW,GAAX;AACA,MAAI,GAAJ,EAAS,GAAT,EAAc,OAAd;AACA,GAHM,CAAP;AAIA;;AAED;AACA,QAAO,sBAAa,UAAE,OAAF,EAAW,MAAX,EAAuB;AAC1C,QAAK,OAAL,CAAc,MAAd,EAAsB,UAAE,GAAF,EAAO,GAAP,EAAgB;AACrC,aAAW,GAAX;AACA,SAAM,OAAQ,GAAR,CAAN,GAAsB,QAAS,GAAT,CAAtB;AACA,GAHD;AAIA,EALM,CAAP;AAMA","file":"send-request.js","sourcesContent":["/**\n * Module dependencies\n */\nimport qs from 'qs';\nimport debugFactory from 'debug';\n\nconst debug = debugFactory( 'wpcom:send-request' );\nconst debug_res = debugFactory( 'wpcom:send-request:res' );\n\n/**\n * Request to WordPress REST API\n *\n * @param {String|Object} params - params object\n * @param {Object} [query] - query object parameter\n * @param {Object} [body] - body object parameter\n * @param {Function} fn - callback function\n * @return {Function} request handler\n */\nexport default function sendRequest( params, query, body, fn ) {\n\t// `params` can be just the path ( String )\n\tparams = 'string' === typeof params ? { path: params } : params;\n\n\tdebug( 'sendRequest(%o )', params.path );\n\n\t// set `method` request param\n\tparams.method = ( params.method || 'get' ).toUpperCase();\n\n\t// `query` is optional\n\tif ( 'function' === typeof query ) {\n\t\tfn = query;\n\t\tquery = {};\n\t}\n\n\t// `body` is optional\n\tif ( 'function' === typeof body ) {\n\t\tfn = body;\n\t\tbody = null;\n\t}\n\n\t// query could be `null`\n\tquery = query || {};\n\n\t// Handle special query parameters\n\t// - `apiVersion`\n\tif ( query.apiVersion ) {\n\t\tparams.apiVersion = query.apiVersion;\n\t\tdebug( 'apiVersion: %o', params.apiVersion );\n\t\tdelete query.apiVersion;\n\t} else {\n\t\tparams.apiVersion = this.apiVersion;\n\t}\n\n\t// - `apiNamespace`\n\tif ( query.apiNamespace ) {\n\t\tparams.apiNamespace = query.apiNamespace;\n\t\tdebug( 'apiNamespace: %o', params.apiNamespace );\n\t\tdelete query.apiNamespace;\n\t}\n\n\t// - `proxyOrigin`\n\tif ( query.proxyOrigin ) {\n\t\tparams.proxyOrigin = query.proxyOrigin;\n\t\tdebug( 'proxyOrigin: %o', params.proxyOrigin );\n\t\tdelete query.proxyOrigin;\n\t}\n\n\t// Stringify query object before to send\n\tquery = qs.stringify( query, { arrayFormat: 'brackets' } );\n\n\t// pass `query` and/or `body` to request params\n\tparams.query = query;\n\n\tif ( body ) {\n\t\tparams.body = body;\n\t}\n\tdebug( 'params: %o', params );\n\n\t// if callback is provided, behave traditionally\n\tif ( 'function' === typeof fn ) {\n\t\t// request method\n\t\treturn this.request( params, function( err, res, headers ) {\n\t\t\tdebug_res( res );\n\t\t\tfn( err, res, headers );\n\t\t} );\n\t}\n\n\t// but if not, return a Promise\n\treturn new Promise( ( resolve, reject ) => {\n\t\tthis.request( params, ( err, res ) => {\n\t\t\tdebug_res( res );\n\t\t\terr ? reject( err ) : resolve( res );\n\t\t} );\n\t} );\n};\n"]}