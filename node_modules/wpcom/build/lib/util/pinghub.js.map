{"version":3,"sources":["../../../lib/util/pinghub.js"],"names":[],"mappings":";;;;;kBAcwB,O;;AAXxB;;;;;;AAEA,IAAM,QAAQ,qBAAc,eAAd,CAAd;;AAEA;;;;;;;AAPA;;;AAce,SAAS,OAAT,CAAkB,KAAlB,EAA0B;AACxC,KAAK,EAAI,gBAAgB,OAApB,CAAL,EAAqC;AACpC,SAAO,IAAI,OAAJ,CAAa,KAAb,CAAP;AACA;;AAED,MAAK,KAAL,GAAa,KAAb;AACA,MAAK,KAAL,GAAa,EAAb;AACA;;AAED;;;;;;;AAOA,QAAQ,SAAR,CAAkB,OAAlB,GAA4B,UAAU,IAAV,EAAgB,EAAhB,EAAqB;AAChD,OAAO,SAAP,EAAkB,IAAlB,EAAwB,EAAxB;AACA,KAAI,UAAU,IAAd;AAAA,KACC,SAAS;AACR,UAAQ,SADA;AAER,QAAM,aAAa;AAFX,EADV;AAAA,KAKC,gBAAgB,SAAhB,aAAgB,GAAW,CAAE,CAL9B;AAAA,KAKgC;AAC/B,OAAM,KAAK,KAAL,CAAW,IAAX,IAAmB,KAAK,KAAL,CAAW,GAAX,CAAe,GAAf,CAAoB,MAApB,EAA4B,aAA5B,CAN1B;AAOA,KAAI,MAAJ,GAAa,UAAU,CAAV,EAAc;AAC1B,QAAO,QAAP,EAAiB,IAAjB,EAAuB,CAAvB;AACA,KAAI,IAAJ,EAAU,CAAV;AACA,EAHD;AAIA,KAAI,OAAJ,GAAc,IAAI,OAAJ,GAAc,IAAI,OAAJ,GAAc,UAAU,CAAV,EAAc;AACvD,QAAO,SAAP,EAAkB,IAAlB,EAAwB,CAAxB;AACA,UAAQ,MAAR,CAAgB,IAAhB;AACA,KAAI,CAAJ,EAAO,IAAP;AACA,EAJD;AAKA,CAlBD;;AAoBA;;;;;;AAMA,QAAQ,SAAR,CAAkB,UAAlB,GAA+B,UAAU,IAAV,EAAiB;AAC/C,OAAO,YAAP,EAAqB,IAArB;AACA,KAAI,SAAS;AACX,UAAQ,YADG;AAEX,QAAM,aAAa;AAFR,EAAb;AAAA,KAIC,gBAAgB,SAAhB,aAAgB,GAAW,CAAE,CAJ9B,CAF+C,CAMf;AAChC,MAAK,KAAL,CAAW,GAAX,CAAe,GAAf,CAAoB,MAApB,EAA4B,aAA5B;AACA,CARD;;AAUA;;;;;;AAMA,QAAQ,SAAR,CAAkB,MAAlB,GAA2B,UAAU,IAAV,EAAiB;AAC3C,OAAO,QAAP,EAAiB,IAAjB;AACA,QAAO,KAAK,KAAL,CAAY,IAAZ,CAAP;AACA,CAHD","file":"pinghub.js","sourcesContent":["/**\n * Module dependencies.\n */\nimport debugFactory from 'debug';\n\nconst debug = debugFactory( 'wpcom:pinghub' );\n\n/**\n * Create a `Pinghub` instance\n *\n * @param {WPCOM} wpcom - wpcom instance\n * @return {null} null\n * @api public\n */\nexport default function Pinghub( wpcom ) {\n\tif ( ! ( this instanceof Pinghub ) ) {\n\t\treturn new Pinghub( wpcom );\n\t}\n\n\tthis.wpcom = wpcom;\n\tthis.conns = {};\n}\n\n/**\n * Open a websocket to Pinghub\n *\n * @param {String} path - request path\n * @param {Function} fn - callback function\n * @api public\n */\nPinghub.prototype.connect = function( path, fn ) {\n\tdebug( 'connect', path, fn );\n\tlet pinghub = this,\n\t\tparams = {\n\t\t\taction: 'connect',\n\t\t\tpath: '/pinghub' + path\n\t\t},\n\t\terrorCallback = function() {}, // we want an xhr, not a promise\n\t\txhr = this.conns[path] = this.wpcom.req.get( params, errorCallback );\n\txhr.onload = function( e ) {\n\t\tdebug( 'onload', path, e );\n\t\tfn( null, e );\n\t};\n\txhr.onerror = xhr.onabort = xhr.onclose = function( e ) {\n\t\tdebug( 'onerror', path, e );\n\t\tpinghub.remove( path );\n\t\tfn( e, null );\n\t};\n};\n\n/**\n * Close a websocket connection (unsubscribe)\n *\n * @param {String} path - request path\n * @api public\n */\nPinghub.prototype.disconnect = function( path ) {\n\tdebug( 'disconnect', path );\n\tlet params = {\n\t\t\taction: 'disconnect',\n\t\t\tpath: '/pinghub' + path\n\t\t},\n\t\terrorCallback = function() {}; // no promises\n\tthis.wpcom.req.get( params, errorCallback );\n}\n\n/**\n * Remove a dead connection\n *\n * @param {String} path - pinghub channel\n * @api private\n */\nPinghub.prototype.remove = function( path ) {\n\tdebug( 'remove', path );\n\tdelete this.conns[ path ];\n};\n"]}