{"version":3,"sources":["../../../lib/util/runtime-builder.js"],"names":[],"mappings":";;;;;;;;;;kBAgCe,UAAU,KAAV,EAAiB,IAAjB,EAAuB,SAAvB,EAAmC;AACjD,OAAK,OAAL,CAAc,wBAAgB;AAC7B,mBAAe,qBAAoB,YAApB,uDAAoB,YAApB,KACZ,YADY,GAEZ,EAAE,MAAM,YAAR,EAFH;;AAIA,UAAO,WAAP,EAAoB,aAAa,IAAjC;AACA,UAAM,SAAN,CAAiB,aAAa,IAA9B,IAAuC,cAAe,YAAf,EAA6B,SAA7B,CAAvC;AACA,GAPD;AAQA,C;;AAtCD;;;;;;AAEA;;;AAGA,IAAM,QAAQ,qBAAc,eAAd,CAAd;;AAEA;;;;;;;AAVA;;;AAiBA,IAAM,gBAAgB,SAAhB,aAAgB,CAAE,YAAF,EAAgB,SAAhB,EAA+B;AACpD,SAAO,UAAU,KAAV,EAAiB,EAAjB,EAAsB;AAC5B,QAAM,OAAO,UAAW,YAAX,EAAyB,IAAzB,CAAb;AACA,WAAO,KAAK,KAAL,CAAW,GAAX,CAAe,GAAf,CAAoB,IAApB,EAA0B,KAA1B,EAAiC,EAAjC,CAAP;AACA,GAHD;AAIA,CALD;;AAOA;;;;;;;;AAiBC","file":"runtime-builder.js","sourcesContent":["/**\n * Module dependencies\n */\nimport debugFactory from 'debug';\n\n/**\n * Module vars\n */\nconst debug = debugFactory( 'wpcom:runtime' );\n\n/**\n * Build a generic method\n *\n * @param {Object} methodParams - method methodParams\n * @param {Function} buildPath - function called to build method path\n * @return {String} method path\n */\nconst methodBuilder = ( methodParams, buildPath ) => {\n\treturn function( query, fn ) {\n\t\tconst path = buildPath( methodParams, this );\n\t\treturn this.wpcom.req.get( path, query, fn );\n\t};\n}\n\n/**\n * Add methods to the given Class in the\n * runtime process.\n *\n * @param {*} Class - class to extend\n * @param {Array} list - methods list\n * @param {Function} buildPath - function to build the method endpoint path\n */\nexport default function( Class, list, buildPath ) {\n\tlist.forEach( methodParams => {\n\t\tmethodParams = 'object' === typeof methodParams\n\t\t\t? methodParams\n\t\t\t: { name: methodParams }\n\n\t\tdebug( 'Adding %o', methodParams.name );\n\t\tClass.prototype[ methodParams.name ] = methodBuilder( methodParams, buildPath );\n\t} );\n};\n"]}