{"version":3,"sources":["../../lib/domain.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAGA;;;;AACA;;;;;;AAJA;;;AAMA,IAAM,OAAO,WAAb;;IAEM,M;AACL;;;;;;;AAOA,iBAAa,EAAb,EAAiB,KAAjB,EAAyB;AAAA;;AACxB,MAAK,EAAI,gBAAgB,MAApB,CAAL,EAAoC;AACnC,UAAO,IAAI,MAAJ,CAAY,EAAZ,EAAgB,KAAhB,CAAP;AACA;AACD,OAAK,GAAL,GAAW,EAAX;AACA,OAAK,KAAL,GAAa,KAAb;AACA;;AAED;;;;;;;;;;;yBAOQ,K,EAAO,E,EAAK;AACnB,UAAO,KAAK,KAAL,CAAW,GAAX,CAAe,GAAf,CAAoB,OAAO,KAAK,GAAZ,GAAkB,SAAtC,EAAiD,KAAjD,EAAwD,EAAxD,CAAP;AACA;;AAED;;;;;;;;;;8BAOa,K,EAAO,E,EAAK;AACxB,UAAO,KAAK,KAAL,CAAW,GAAX,CAAe,GAAf,CAAoB,OAAO,KAAK,GAAZ,GAAkB,eAAtC,EAAuD,KAAvD,EAA8D,EAA9D,CAAP;AACA;;AAED;;;;;;;;;;;6BAQY,K,EAAO,E,EAAK;AACvB,UAAO,KAAK,KAAL,CAAW,GAAX,CAAe,GAAf,CAAoB,OAAO,KAAK,GAAZ,GAAkB,cAAtC,EAAsD,KAAtD,EAA6D,EAA7D,CAAP;AACA;;AAED;;;;;;;;;;;8BAQa,M,EAAQ,K,EAAO,E,EAAK;AAChC,OAAI,OAAO,OAAO,MAAP,GAAgB,GAAhB,GAAsB,KAAK,GAA3B,GAAiC,eAA5C;AACA,UAAO,KAAK,KAAL,CAAW,GAAX,CAAe,GAAf,CAAoB,IAApB,EAA0B,KAA1B,EAAiC,EAAjC,CAAP;AACA;;AAED;;;;;;;;;;gCAOe,K,EAAO,E,EAAK;AAC1B,UAAO,KAAK,KAAL,CAAW,GAAX,CAAe,GAAf,CAAoB,OAAO,KAAK,GAAZ,GAAkB,QAAtC,EAAgD,KAAhD,EAAuD,EAAvD,CAAP;AACA;;AAED;;;;;;;;;;kCAOiB,K,EAAO,E,EAAK;AAC5B,UAAO,KAAK,KAAL,CAAW,GAAX,CAAe,GAAf,CAAoB,OAAO,KAAK,GAAZ,GAAkB,cAAtC,EAAsD,KAAtD,EAA6D,EAA7D,CAAP;AACA;;AAED;;;;;;;;;;;oCAQmB,W,EAAa,K,EAAO,E,EAAK;AAC3C,OAAI,OAAO,EAAE,aAAa,WAAf,EAAX;AACA,UAAO,KAAK,KAAL,CAAW,GAAX,CAAe,IAAf,CAAqB,OAAO,KAAK,GAAZ,GAAkB,cAAvC,EAAuD,KAAvD,EAA8D,IAA9D,EAAoE,EAApE,CAAP;AACA;;AAED;;;;;;;;;;0BAOS,K,EAAO,E,EAAK;AACpB,UAAO,KAAK,KAAL,CAAW,GAAX,CAAe,GAAf,CAAoB,OAAO,KAAK,GAAZ,GAAkB,MAAtC,EAA8C,KAA9C,EAAqD,EAArD,CAAP;AACA;;AAED;;;;;;;;;;iCAOgB,K,EAAO,E,EAAK;AAC3B,UAAO,KAAK,KAAL,CAAW,GAAX,CAAe,GAAf,CAAoB,OAAO,KAAK,GAAZ,GAAkB,cAAtC,EAAsD,KAAtD,EAA6D,EAA7D,CAAP;AACA;;AAED;;;;;;;;;;8BAOa,K,EAAO,E,EAAK;AACxB,UAAO,KAAK,KAAL,CAAW,GAAX,CAAe,IAAf,CAAqB,OAAO,KAAK,GAAZ,GAAkB,eAAvC,EAAwD,KAAxD,EAA+D,EAA/D,CAAP;AACA;;AAED;;;;;;;;;wBAMO,M,EAAQ;AACd,UAAO,qBAAiB,MAAjB,EAAwB,KAAK,GAA7B,EAAkC,KAAK,KAAvC,CAAP;AACA;;AAED;;;;;;;;wBAKM;AACL,UAAO,qBAAe,KAAK,GAApB,EAAyB,KAAK,KAA9B,CAAP;AACA;;;;;AAGF;;;;;kBAGe,M","file":"domain.js","sourcesContent":["/**\n * Module dependencies\n */\nimport DomainEmail from './domain.email';\nimport DomainDns from './domain.dns';\n\nconst root = '/domains/';\n\nclass Domain {\n\t/**\n\t * `Domain` constructor.\n\t *\n\t * @param {String} id - domain identifier\n\t * @param {WPCOM} wpcom - wpcom instance\n\t * @return {Undefined} undefined\n\t */\n\tconstructor( id, wpcom ) {\n\t\tif ( ! ( this instanceof Domain ) ) {\n\t\t\treturn new Domain( id, wpcom );\n\t\t}\n\t\tthis._id = id;\n\t\tthis.wpcom = wpcom;\n\t}\n\n\t/**\n\t * Get the status of the domain\n\t *\n\t * @param {Object} [query] - query object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\tstatus( query, fn ) {\n\t\treturn this.wpcom.req.get( root + this._id + '/status', query, fn );\n\t}\n\n\t/**\n\t * Check if the given domain is available\n\t *\n\t * @param {Object} [query] - query object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\tisAvailable( query, fn ) {\n\t\treturn this.wpcom.req.get( root + this._id + '/is-available', query, fn );\n\t}\n\n\t/**\n\t * Check if the given domain name can be mapped to\n\t * a WordPress blog.\n\t *\n\t * @param {Object} [query] - query object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\tisMappable( query, fn ) {\n\t\treturn this.wpcom.req.get( root + this._id + '/is-mappable', query, fn );\n\t}\n\n\t/**\n\t * Check if the given domain name can be used for site redirect.\n\t *\n\t * @param {String} siteId - site id of the site to check\n\t * @param {Object} [query] - query object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\tcanRedirect( siteId, query, fn ) {\n\t\tvar path = root + siteId + '/' + this._id + '/can-redirect';\n\t\treturn this.wpcom.req.get( path, query, fn );\n\t}\n\n\t/**\n\t * Get the email forwards/configuration for a domain.\n\t *\n\t * @param {Object} [query] - query object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\temailForwards( query, fn ) {\n\t\treturn this.wpcom.req.get( root + this._id + '/email', query, fn );\n\t}\n\n\t/**\n\t * Get a list of the nameservers for the domain\n\t *\n\t * @param {Object} [query] - query object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\tnameserversList( query, fn ) {\n\t\treturn this.wpcom.req.get( root + this._id + '/nameservers', query, fn );\n\t}\n\n\t/**\n\t * Update the nameservers for the domain\n\t *\n\t * @param {Array} nameservers- nameservers list\n\t * @param {Object} [query] - query object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\tupdateNameservers( nameservers, query, fn ) {\n\t\tlet body = { nameservers: nameservers };\n\t\treturn this.wpcom.req.post( root + this._id + '/nameservers', query, body, fn );\n\t}\n\n\t/**\n\t * Get a list of the DNS records for the domain\n\t *\n\t * @param {Object} [query] - query object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\tdnsList( query, fn ) {\n\t\treturn this.wpcom.req.get( root + this._id + '/dns', query, fn );\n\t}\n\n\t/**\n\t * Get a list of all Google Apps accounts for the domain\n\t *\n\t * @param {Object} [query] - query object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\tgoogleAppsList( query, fn ) {\n\t\treturn this.wpcom.req.get( root + this._id + '/google-apps', query, fn );\n\t}\n\n\t/**\n\t * Resend the ICANN verification email for the domain\n\t *\n\t * @param {Object} [query] - query object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\tresendICANN( query, fn ) {\n\t\treturn this.wpcom.req.post( root + this._id + '/resend-icann', query, fn );\n\t}\n\n\t/**\n\t * Return `DomainEmail` instance\n\t *\n\t * @param {String} [email] - email identifier\n\t * @return {DomainEmail} DomainEmail instance\n\t */\n\temail( email ) {\n\t\treturn new DomainEmail( email, this._id, this.wpcom );\n\t}\n\n\t/**\n\t * Return `DomainDns` instance\n\t *\n\t * @return {DomainDns} DomainDns instance\n\t */\n\tdns() {\n\t\treturn new DomainDns( this._id, this.wpcom );\n\t}\n}\n\n/**\n * Expose `Domain` module\n */\nexport default Domain;\n"]}