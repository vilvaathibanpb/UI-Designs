{"version":3,"sources":["../../lib/site.comment.js"],"names":[],"mappings":"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","file":"site.comment.js","sourcesContent":["/**\n * Module dependencies.\n */\nimport commentLike from './site.comment.like';\n\n/**\n * Comment methods\n *\n * @param {String} [cid] comment id\n * @param {String} [pid] post id\n * @param {String} sid site id\n * @param {WPCOM} wpcom - wpcom instance\n * @return {Null} null\n */\nexport default function Comment( cid, pid, sid, wpcom ) {\n\tif ( ! sid ) {\n\t\tthrow new Error( '`site id` is not correctly defined' );\n\t}\n\n\tif ( ! ( this instanceof Comment ) ) {\n\t\treturn new Comment( cid, pid, sid, wpcom );\n\t}\n\n\tthis.wpcom = wpcom;\n\tthis._cid = cid;\n\tthis._pid = pid;\n\tthis._sid = sid;\n}\n\n/**\n * Return a single Comment\n *\n * @param {Object} [query] - query object parameter\n * @param {Function} fn - callback function\n * @return {Function} request handler\n */\nComment.prototype.get = function( query, fn ) {\n\tvar path = '/sites/' + this._sid + '/comments/' + this._cid;\n\treturn this.wpcom.req.get( path, query, fn );\n};\n\n/**\n * Return recent comments for a post\n *\n * @param {Object} [query] - query object parameter\n * @param {Function} fn - callback function\n * @return {Function} request handler\n */\nComment.prototype.replies = function( query, fn ) {\n\tvar path = '/sites/' + this._sid + '/posts/' + this._pid + '/replies/';\n\treturn this.wpcom.req.get( path, query, fn );\n};\n\n/**\n * Create a comment on a post\n *\n * @param {Object} [query] - query object parameter\n * @param {String|Object} body - body parameter\n * @param {Function} fn - callback function\n * @return {Function} request handler\n */\nComment.prototype.add = function( query, body, fn ) {\n\tif ( undefined === fn ) {\n\t\tif ( undefined === body ) {\n\t\t\tbody = query;\n\t\t\tquery = {};\n\t\t} else if ( 'function' === typeof body ) {\n\t\t\tfn = body;\n\t\t\tbody = query;\n\t\t\tquery = {};\n\t\t}\n\t}\n\n\tbody = 'string' === typeof body ? { content: body } : body;\n\n\tlet path = '/sites/' + this._sid + '/posts/' + this._pid + '/replies/new';\n\treturn this.wpcom.req.post( path, query, body, fn );\n};\n\n/**\n * Edit a comment\n *\n * @param {Object} [query] - query object parameter\n * @param {String|Object} body - body parameter\n * @param {Function} fn - callback function\n * @return {Function} request handler\n */\nComment.prototype.update = function( query, body, fn ) {\n\tif ( 'function' === typeof body ) {\n\t\tfn = body;\n\t\tbody = query;\n\t\tquery = {};\n\t}\n\n\tbody = 'string' === typeof body ? { content: body } : body;\n\n\tlet path = '/sites/' + this._sid + '/comments/' + this._cid;\n\treturn this.wpcom.req.put( path, query, body, fn );\n};\n\n/**\n * Create a Comment as a reply to another Comment\n *\n * @param {Object} [query] - query object parameter\n * @param {String|Object} body - body parameter\n * @param {Function} fn - callback function\n * @return {Function} request handler\n */\nComment.prototype.reply = function( query, body, fn ) {\n\tif ( 'function' === typeof body ) {\n\t\tfn = body;\n\t\tbody = query;\n\t\tquery = {};\n\t}\n\n\tbody = 'string' === typeof body ? { content: body } : body;\n\n\tlet path = '/sites/' + this._sid + '/comments/' + this._cid + '/replies/new';\n\treturn this.wpcom.req.post( path, query, body, fn );\n};\n\n/**\n * Delete a comment\n *\n * @param {Object} [query] - query object parameter\n * @param {Function} fn - callback function\n * @return {Function} request handler\n */\nComment.prototype.del =\nComment.prototype.delete = function( query, fn ) {\n\tvar path = '/sites/' + this._sid + '/comments/' + this._cid + '/delete';\n\treturn this.wpcom.req.del( path, query, fn );\n};\n\n/**\n * Create a `commentLike` instance\n *\n * @return {CommentLink} CommentLink instance\n */\nComment.prototype.like = function() {\n\treturn commentLike( this._cid, this._sid, this.wpcom );\n};\n\n/**\n * Get comment likes list\n *\n * @param {Object} [query] - query object parameter\n * @param {Function} fn - callback function\n * @return {Function} request handler\n */\nComment.prototype.likesList = function( query, fn ) {\n\tvar path = '/sites/' + this._sid + '/comments/' + this._cid + '/likes';\n\treturn this.wpcom.req.get( path, query, fn );\n};\n"]}