{"version":3,"sources":["../../lib/site.js"],"names":[],"mappings":"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","file":"site.js","sourcesContent":["/**\n * Module dependencies.\n */\nimport Category from './site.category';\nimport Comment from './site.comment';\nimport Follow from './site.follow';\nimport Media from './site.media';\nimport Post from './site.post';\nimport Tag from './site.tag';\nimport SitePostType from './site.post-type';\nimport SiteDomain from './site.domain';\nimport SitePlugin from './site.plugin';\nimport SiteSettings from './site.settings';\nimport SiteTaxonomy from './site.taxonomy';\nimport SiteCreditVouchers from './site.credit-vouchers';\nimport SiteWordAds from './site.wordads';\nimport SiteWPComPlugin from './site.wpcom-plugin';\n\nimport siteGetMethods from './runtime/site.get';\nimport runtimeBuilder from './util/runtime-builder';\nimport debugFactory from 'debug';\n\n/**\n * Module vars\n */\nconst debug = debugFactory( 'wpcom:site' );\nconst root = '/sites';\n\n/**\n * Site class\n */\nclass Site {\n\t/**\n\t * Create a Site instance\n\t *\n\t * @param {String} id - site id\n\t * @param {WPCOM} wpcom - wpcom instance\n\t * @return {Null} null\n\t */\n\tconstructor( id, wpcom ) {\n\t\tif ( ! ( this instanceof Site ) ) {\n\t\t\treturn new Site( id, wpcom );\n\t\t}\n\n\t\tthis.wpcom = wpcom;\n\n\t\tdebug( 'set %o site id', id );\n\t\tthis._id = encodeURIComponent( id );\n\t\tthis.path = `${ root }/${ this._id }`;\n\t}\n\n\t/**\n\t * Require site information\n\t *\n\t * @param {Object} [query] - query object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\tget( query, fn ) {\n\t\treturn this.wpcom.req.get( this.path, query, fn );\n\t}\n\n\t/**\n\t * Create a `Post` instance\n\t *\n\t * @param {String} id - post id\n\t * @return {Post} Post instance\n\t */\n\tpost( id ) {\n\t\treturn new Post( id, this._id, this.wpcom );\n\t}\n\n\t/**\n\t * Add a new blog post\n\t *\n\t * @param {Object} body - body object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\taddPost( body, fn ) {\n\t\tconst post = new Post( null, this._id, this.wpcom );\n\t\treturn post.add( body, fn );\n\t}\n\n\t/**\n\t * Delete a blog post\n\t *\n\t * @param {String} id - post id\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\tdeletePost( id, fn ) {\n\t\tconst post = new Post( id, this._id, this.wpcom );\n\t\treturn post.delete( fn );\n\t}\n\n\t/**\n\t * Create a `Media` instance\n\t *\n\t * @param {String} id - post id\n\t * @return {Media} Media instance\n\t */\n\tmedia( id ) {\n\t\treturn new Media( id, this._id, this.wpcom );\n\t}\n\n\t/**\n\t * Add a media from a file\n\t *\n\t * @param {Object} [query] - query object parameter\n\t * @param {Array|String} files - media files to add\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\taddMediaFiles( query, files, fn ) {\n\t\tconst media = new Media( null, this._id, this.wpcom );\n\t\treturn media.addFiles( query, files, fn );\n\t}\n\n\t/**\n\t * Add a new media from url\n\t *\n\t * @param {Object} [query] - query object parameter\n\t * @param {Array|String} files - media files to add\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\taddMediaUrls( query, files, fn ) {\n\t\tconst media = new Media( null, this._id, this.wpcom );\n\t\treturn media.addUrls( query, files, fn );\n\t}\n\n\t/**\n\t * Delete a blog media\n\t *\n\t * @param {String} id - media id\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\tdeleteMedia( id, fn ) {\n\t\tconst media = new Media( id, this._id, this.wpcom );\n\t\treturn media.del( fn );\n\t}\n\n\t/**\n\t * Create a `Comment` instance\n\t *\n\t * @param {String} id - comment id\n\t * @return {Comment} Comment instance\n\t */\n\tcomment( id ) {\n\t\treturn new Comment( id, null, this._id, this.wpcom );\n\t}\n\n\t/**\n\t * Create a `Follow` instance\n\t *\n\t * @return {Follow} Follow instance\n\t */\n\tfollow() {\n\t\treturn new Follow( this._id, this.wpcom );\n\t}\n\n\t/**\n\t * Create a `SitePlugin` instance\n\t *\n\t * @param {String} slug - plugin identifier\n\t * @return {SitePlugin} SitePlugin instance\n\t */\n\tplugin( slug ) {\n\t\treturn new SitePlugin( slug, this._id, this.wpcom );\n\t}\n\n\t/**\n\t * Create a `SiteWPComPlugin` instance\n\t *\n\t * @param {String} slug - plugin identifier\n\t * @return {SiteWPComPlugin} SiteWPComPlugin instance\n\t */\n\twpcomPlugin( slug ) {\n\t\treturn new SiteWPComPlugin( slug, this._id, this.wpcom );\n\t}\n\n\t/**\n\t * Create a `Category` instance\n\t * Set `cat` alias\n\t *\n\t * @param {String} [slug] - category slug\n\t * @return {Category} Category instance\n\t */\n\tcategory( slug ) {\n\t\treturn new Category( slug, this._id, this.wpcom );\n\t}\n\n\t/**\n\t * Create a `Tag` instance\n\t *\n\t * @param {String} [slug] - tag slug\n\t * @return {Tag} Tag instance\n\t */\n\ttag( slug ) {\n\t\treturn new Tag( slug, this._id, this.wpcom );\n\t}\n\n\t/**\n\t * Create a `Taxonomy` instance\n\t *\n\t * @param {String} [slug] - taxonomy slug\n\t * @return {SiteTaxonomy} SiteTaxonomy instance\n\t */\n\ttaxonomy( slug ) {\n\t\treturn new SiteTaxonomy( slug, this._id, this.wpcom );\n\t}\n\n\t/**\n\t * Create a `SiteCreditVouchers` instance\n\t *\n\t * @return {SiteCreditVouchers} SiteCreditVouchers instance\n\t */\n\tcreditVouchers() {\n\t\treturn new SiteCreditVouchers( this._id, this.wpcom );\n\t}\n\n\t/**\n\t * Create a `SitePostType` instance\n\t *\n\t * @param {String} [slug] - post type slug\n\t * @return {SitePostType} SitePostType instance\n\t */\n\tpostType( slug ) {\n\t\treturn new SitePostType( slug, this._id, this.wpcom );\n\t}\n\n\t/**\n\t * Create a `SiteSettings` instance\n\t *\n\t * @return {SiteSettings} SiteSettings instance\n\t */\n\tsettings() {\n\t\treturn new SiteSettings( this._id, this.wpcom );\n\t}\n\n\t/**\n\t * Create a `SiteDomain` instance\n\t *\n\t * @return {SiteDomain} SiteDomain instance\n\t */\n\tdomain() {\n\t\treturn new SiteDomain( this._id, this.wpcom );\n\t}\n\n\t/**\n\t * Get number of posts in the post type groups by post status\n\t *\n\t * *Example:*\n\t *   // Get number post of pages\n\t *    wpcom\n\t *    .site( 'my-blog.wordpress.com' )\n\t *    .postCounts( 'page', function( err, data ) {\n\t *      // `counts` data object\n\t *    } );\n\t *\n\t * @param {String} type - post type\n\t * @param {Object} [query] - query object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\tpostCounts( type = 'post', query, fn ) {\n\t\tif ( 'function' === typeof query ) {\n\t\t\tfn = query;\n\t\t\tquery = {};\n\t\t}\n\n\t\treturn this.wpcom.req.get( `${ this.path }/post-counts/${ type }`, query, fn );\n\t}\n\n\t/**\n\t * Get a rendered shortcode for a site.\n\t *\n\t * Note: The current user must have publishing access.\n\t *\n\t * @param {String} url - shortcode url\n\t * @param {Object} [query] - query object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\trenderShortcode( url, query, fn ) {\n\t\tif ( 'string' !== typeof url ) {\n\t\t\tthrow new TypeError( 'expected a url String' );\n\t\t}\n\n\t\tif ( 'function' === typeof query ) {\n\t\t\tfn = query;\n\t\t\tquery = {};\n\t\t}\n\n\t\tquery = query || {};\n\t\tquery.shortcode = url;\n\n\t\treturn this.wpcom.req.get( `${ this.path }/shortcodes/render`, query, fn );\n\t}\n\n\t/**\n\t * Get a rendered embed for a site.\n\t *\n\t * Note: The current user must have publishing access.\n\t *\n\t * @param {String} url - embed url\n\t * @param {Object} [query] - query object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\trenderEmbed( url, query, fn ) {\n\t\tif ( 'string' !== typeof url ) {\n\t\t\tthrow new TypeError( 'expected an embed String' );\n\t\t}\n\n\t\tif ( 'function' === typeof query ) {\n\t\t\tfn = query;\n\t\t\tquery = {};\n\t\t}\n\n\t\tquery = query || {};\n\t\tquery.embed_url = url;\n\n\t\treturn this.wpcom.req.get( `${ this.path }/embeds/render`, query, fn );\n\t}\n\n\t/**\n\t * Mark a referrering domain as spam\n\t *\n\t * @param {String} domain - domain\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\tstatsReferrersSpamNew( domain, fn ) {\n\t\tconst path = `${ this.path }/stats/referrers/spam/new`;\n\t\treturn this.wpcom.req.post( path, { domain }, null, fn );\n\t}\n\n\t/**\n\t * Remove referrering domain from spam\n\t *\n\t * @param {String} domain - domain\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\tstatsReferrersSpamDelete( domain, fn ) {\n\t\tconst path = `${ this.path }/stats/referrers/spam/delete`;\n\t\treturn this.wpcom.req.post( path, { domain }, null, fn );\n\t}\n\n\t/**\n\t * Get detailed stats about a VideoPress video\n\t *\n\t * @param {String} videoId - video id\n\t * @param {Object} [query] - query object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\tstatsVideo( videoId, query, fn ) {\n\t\tconst path = `${ this.path }/stats/video/${ videoId }`;\n\n\t\tif ( 'function' === typeof query ) {\n\t\t\tfn = query;\n\t\t\tquery = {};\n\t\t}\n\n\t\treturn this.wpcom.req.get( path, query, fn );\n\t}\n\n\t/**\n\t * Get detailed stats about a particular post\n\t *\n\t * @param {String} postId - post id\n\t * @param {Object} [query] - query object parameter\n\t * @param {Function} fn - callback function\n\t * @return {Function} request handler\n\t */\n\tstatsPostViews( postId, query, fn ) {\n\t\tconst path = `${ this.path }/stats/post/${ postId }`;\n\n\t\tif ( 'function' === typeof query ) {\n\t\t\tfn = query;\n\t\t\tquery = {};\n\t\t}\n\n\t\treturn this.wpcom.req.get( path, query, fn );\n\t}\n\n\t/**\n\t * Return a `SiteWordAds` instance.\n\t *\n\t * *Example:*\n\t *    // Create a SiteWordAds instance\n\t *\n\t *    const wordAds = wpcom\n\t *      .site( 'my-blog.wordpress.com' )\n\t *      .wordAds();\n\t *\n\t * @return {SiteWordAds} SiteWordAds instance\n\t */\n\twordAds() {\n\t\treturn new SiteWordAds( this._id, this.wpcom );\n\t}\n}\n\n// add methods in runtime\nruntimeBuilder( Site, siteGetMethods, ( methodParams, ctx ) => {\n\treturn `/sites/${ ctx._id }/${ methodParams.subpath }`;\n} );\n\nexport default Site;\n"]}